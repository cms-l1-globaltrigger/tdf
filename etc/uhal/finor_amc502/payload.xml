<node description="AMC502 finor - payload registers" fwinfo="endpoint">
  
<!--HB 2016-09-01: lemo_out_sel used only for tests not in SWATCH-->
<!--    <node id="lemo_out_sel" address="0x00" description="Selection of signals to LEMO outputs (to TCDS)">
        <node id="lemo_0" address="0x00" mask="0x000000ff" permission="rw"/>
        <node id="lemo_1" address="0x00" mask="0x0000ff00" permission="rw"/>
        <node id="lemo_2" address="0x00" mask="0x00ff0000" permission="rw"/>
        <node id="lemo_3" address="0x00" mask="0xff000000" permission="rw"/>
    </node>-->
    
    <node id="input_masks" address="0x01" description="Masking finor and veto inputs">
        <node id="module_0" address="0x00" mask="0x00000001" permission="rw"/> <!-- Disables input, when written 1 -->
        <node id="module_1" address="0x00" mask="0x00000002" permission="rw"/>
        <node id="module_2" address="0x00" mask="0x00000004" permission="rw"/>
        <node id="module_3" address="0x00" mask="0x00000008" permission="rw"/>
        <node id="module_4" address="0x00" mask="0x00000010" permission="rw"/>
        <node id="module_5" address="0x00" mask="0x00000020" permission="rw"/>
    </node>
    
    <node id="spytrig_ctrl" address="0x0d" description="Control Regs for Spytrigger">
        <node id="orbit_nr_l" address="0x00" mask="0xffffffff" permission="rw"/>
        <node id="orbit_nr_h" address="0x01" mask="0x0000ffff" permission="rw"/>
        <node id="control"    address="0x02">
            <node id="clear_spy12_ready_event" address="0x00" mask="0x00000008" permission="w"/> <!-- Clears the ready flag of the spy I/II trigger, when written 1 -->
            <node id="clear_spy12_error_event" address="0x00" mask="0x00000020" permission="w"/> <!-- Clears the error flag of the spy I/II trigger, when written 1 -->
        </node>
    </node>
    <node id="spytrig_status" address="0x1f" description="SpyTrigger Status Regs">
        <node id="trig_spy12_busy"  address="0x00" mask="0x20000000" permission="r" tags="0x0:READY,0x1:BUSY"/>
        <node id="trig_spy12_error" address="0x00" mask="0x40000000" permission="r" tags="0x0:OK,0x1:ERROR"/>
        <node id="trig_spy12_ready" address="0x00" mask="0x80000000" permission="r" tags="0x0:NOTREADY,0x1:READY"/>
    </node>
    <node id="module_info" address="0x10" description="Module Info Regs">
        <node id="build_version"     	address="0x00" mask="0xffffffff" permission="r" parameters="type=hex" description="Build Version Number"/>
        <node id="board_id" 		address="0x01" mask="0xffffffff" permission="r" />
        <node id="location" 		address="0x02" mask="0xffffffff" permission="r"/>
        <node id="mac_lo"   		address="0x03" mask="0xffffffff" permission="r"/>
        <node id="mac_hi"   		address="0x04" mask="0xffffffff" permission="r"/>
        <node id="ip_addr"  		address="0x05" mask="0xffffffff" permission="r"/>
        <node id="timestamp" 		address="0x06" mask="0xffffffff"  permission="r" parameters="type=timestamp"/>
        <node id="username"  		address="0x07" mode="incremental" size="8" permission="r" parameters="type=string"/>
    </node>
    <node id="tcm_regs" address="0x80" description="Registers for TCM module">
        <node id="cmd_ignbcres"                 address="0x00000000" mask="0x00000001" permission="rw"/> <!-- the check for bcres is ignored when cmd_ignbcres is set. the bx_nr then automatically resets after 0xdeb without checking if bcres is asserted correctly -->
        <node id="err_det_reset_event"          address="0x00000001" mask="0x00000001" permission="rw"/> <!-- resets err_det when 1 is written to this register -->
<!--        <node id="bgos"                         address="0x00000002" mask="0x0000000f" permission="rw"/> <!-- used to simulate bgos events. set this register to the desired value and use bgos_event overwrite the real bgos by the value of this register for exactly one clock cycle -->-->
<!--        <node id="bgos_event"                   address="0x00000003" mask="0x00000001" permission="rw"/> <!-- the real bgos is overwritten by the value of the software register bgos for exactly one clock cycle when 1 is written to this register -->-->
<!--        <node id="luminosity_seg_period_msk"    address="0x00000004" mask="0xffffffff" permission="rw"/> <!-- luminosity_seg_nr is increased when the orbit_nr mod lum_seg_period_mask = 0 -->-->
        <node id="orbit_nr_l"                   address="0x00000014" mask="0xffffffff" permission="r"/>
        <node id="orbit_nr_h"                   address="0x00000015" mask="0x0000ffff" permission="r"/>
        <node id="bx_nr_max"                    address="0x00000017" mask="0xffffffff" permission="r"/> <!-- should always be equal 0xdeb -->
        <node id="luminosity_seg_nr"            address="0x0000001A" mask="0xffffffff" permission="r"/>
    </node>
    <node id="reset" address="0xA0" mask="0x00000001" description="Pulse reg for reset-pulse"/>
    <node id="spy12_once_event" address="0xA0" mask="0x00000004" description="Triggers a spy event for a specific orbit"/>
    <node id="spy12_next_event" address="0xA0" mask="0x00000008" description="Triggers a spy event for the next orbity"/>
<!--    <node id="spy_once_event" address="0xA0" mask="0x00000004" description="Pulse reg for spy-mem"/>
    <node id="spy_next_event" address="0xA0" mask="0x00000008" description="Pulse reg for spy-mem"/>-->
<!--    <node id="rate_cnt_finor_tcds" address="0xB0" permission="r" description="Rate counter for finor to TCDS"/>-->
    <node id="rate_cnt_finor_tcds" address="0xB1" permission="r" description="Rate counter for finor to TCDS"/> <!-- HB 2016-06-21: 0xB0 was wrong, 0xB1 is correct -->
<!--    <node id="rate_cnt_loc_finor" address="0xC0" mode="incremental" size="6" permission="r" description="Rate counter for local finor"/>-->
    <node id="rate_cnt_loc_finor" address="0xC8" mode="incremental" size="6" permission="r" description="Rate counter for local finor"/>
<!--    <node id="rate_cnt_loc_veto" address="0xD0" mode="incremental" size="6" permission="r" description="Rate counter for local veto"/>-->
    <node id="rate_cnt_loc_veto" address="0xD8" mode="incremental" size="6" permission="r" description="Rate counter for local veto"/>
    <node id="spymem" address="0x01000000" description="Spy memory" mode="incremental" size="4096" permission="r" parameters="foo=bar;type=mem;class=ExtCondMemoryImage" description="Memory for spying the input signals"/>
</node>
