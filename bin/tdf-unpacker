#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#
# Copyright 2013-2014 Bernhard Arnold <bernahrd.arnold@cern.ch>
#                     Johannes Wittmann <johannes.wittmann@cern.ch>
#
# Repository path   : $HeadURL: svn://heros.hephy.oeaw.ac.at/GlobalTriggerUpgrade/software/tdf/trunk/bin/tdf-unpacker $
# Last committed    : $Revision: 3751 $
# Last changed by   : $Author: arnold $
# Last changed date : $Date: 2015-02-13 15:13:07 +0100 (Fri, 13 Feb 2015) $
#

import sys, os

from tdf.extern import argparse
from tdf.core import TDF
from tdf.core.testvector import TestVectorReader
from tdf.core.unpacker import RecordFileReader
from tdf.mp7.unpacker import ReadoutRecord

__version__ = '$Revision: 3751 $'

try:
    #TODO will be replaced by new implementation.
    from l1triggermenu.core.bindings.l1triggermenu_patch import patch as l1tm_factory
except ImportError:
    print "*** warning: missing package `l1triggermenu.core': XML menu file ignored"
    l1tm_factory = None

# -----------------------------------------------------------------------------
#  Argument parsing
# -----------------------------------------------------------------------------

def parse():
    """Returns parsed command lien arguments."""
    argp = argparse.ArgumentParser(
        prog        = 'tdf-unpacker',
        description = "Readout record (ROR) unpacker and analysis tool",
        epilog      = "Report bugs to <bernhard.arnold@chern.ch>."
    )
    argp.add_argument('filename', metavar = '<file>', type = argparse.FileType('rb'), help = "readout records file")
    argp.add_argument('-p', '--pattern', metavar = '<file>', type = argparse.FileType('rb'), help = "compare with test vector")
    argp.add_argument('-m', '--menu', metavar = '<file>', type = argparse.FileType('rb'), help = "use refence menu XML")
    argp.add_argument('--raw', action = 'store_true', help = "print only raw record data")
    argp.add_argument('-V, --version', action='version', version='%(prog)s {__version__}'.format(**globals()))
    return argp.parse_args()

# -----------------------------------------------------------------------------
#  Main routine
# -----------------------------------------------------------------------------

def main():
    args = parse()

    pattern = None
    menu = None

    record_data = RecordFileReader(args.filename).read()

    # Print raw record and exit.
    if args.raw:
        print record_data
        return TDF.EXIT_SUCCESS

    # Compare with given pattern file.
    if args.pattern:
        reader = TestVectorReader(args.pattern)
        pattern = [line for line in reader]

        # Load menu if provided.
        if args.menu and l1tm_factory:
            menu = l1tm_factory(args.menu.read())

    record = ReadoutRecord(record_data, pattern, menu)

    print record
    print record.error_report()

    return TDF.EXIT_SUCCESS

if __name__ == '__main__':
    sys.exit(main())
